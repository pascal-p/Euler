using Test

include("quadratic_primes.jl")

const PRIMES_LT100 = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]


@testset "timing quadratic_primes / quadratic_primes_bf" begin
  @test @time quadratic_primes(1000) == (-61, 971, -59231, 71)

  @test @time quadratic_primes_bf(1000) == (-61, 971, -59231, 71)
end


@testset "#quadratic_primes" begin
  @test quadratic_primes(200) == (-25, 197, -4925, 53)

  @test quadratic_primes(500) == (-41, 461, -18901, 61)

  @test quadratic_primes(800) == (-55, 797, -43835, 68)

  @test quadratic_primes(1000) == (-61, 971, -59231, 71)

  # @time quadratic_primes_bf(1000)   # 206ms
  # 0.206754 seconds (4 allocations: 5.964 MiB)
  # (-61, 971, -59231, 71)
end

@testset "#quadratic_primes_bf" begin
  @test quadratic_primes_bf(200) == (-25, 197, -4925, 53)

  @test quadratic_primes_bf(500) == (-41, 461, -18901, 61)

  @test quadratic_primes_bf(800) == (-55, 797, -43835, 68)

  @test quadratic_primes_bf(1000) == (-61, 971, -59231, 71)

  # @time quadratic_primes_bf(1000)   # 206ms
  # 0.206754 seconds (4 allocations: 5.964 MiB)
  # (-61, 971, -59231, 71)
end


# @testset "#is_prime" begin
#   @test is_prime(PRIMES_LT100, 11)
#   @test is_prime(PRIMES_LT100, 23)
#   @test is_prime(PRIMES_LT100, 47)
#   @test is_prime(PRIMES_LT100, 97)

#   @test !is_prime(PRIMES_LT100, 32)
#   @test !is_prime(PRIMES_LT100, 64)
#   @test !is_prime(PRIMES_LT100, 21)
# end

@testset "#sieve" begin
  @test sieve(100) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]

  @test sieve(500) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499]

  @test sieve(1000) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997]
end
